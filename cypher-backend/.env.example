# Cypher Backend Environment Variables Example
# Copy this file to .env and fill in your actual values.

# --- MongoDB Configuration ---
# Connection string for your MongoDB instance.
# Example: mongodb://localhost:27017/
MONGO_URI=your_mongodb_uri
# Name of the database Cypher should use within MongoDB.
MONGO_DB_NAME=cypher_paas

# --- JWT Authentication ---
# A strong, random secret key used for signing JWT tokens.
# Generate one using: openssl rand -hex 32
SECRET_KEY=generate_a_strong_random_secret_key_here

# --- GitHub OAuth Application ---
# Create a GitHub OAuth App: https://github.com/settings/developers
# Set the "Authorization callback URL" to your backend's callback endpoint (e.g., http://localhost:8000/auth/callback)
# Required for user login via GitHub.
GITHUB_CLIENT_ID=your_github_oauth_app_client_id
GITHUB_CLIENT_SECRET=your_github_oauth_app_client_secret
# The full URL to your backend's OAuth callback endpoint. Must match the one configured in the GitHub App.
GITHUB_CALLBACK_URL=http://localhost:8000/auth/callback

# --- Frontend URL ---
# The base URL where your Cypher frontend application is running.
# Used for redirects after login/logout.
FRONTEND_URL=http://localhost:5173

# --- GitHub Webhook ---
# Required for automatic builds triggered by 'git push' events.
# Create a webhook in your GitHub repository settings:
# - Payload URL: <your-backend-url>/webhooks/github (e.g., http://your-cypher-domain.com/webhooks/github)
# - Content type: application/json
# - Secret: Enter the same strong secret you put here.
# - Events: Select "Just the push event".
GITHUB_WEBHOOK_SECRET=generate_a_strong_random_webhook_secret_here

# --- Docker Registry (Optional) ---
# If you want Cypher to push built images to a private registry.
# Leave blank if only building locally or pushing to Docker Hub (requires `docker login` on the host).
DOCKER_REGISTRY_URL=your_registry_url (e.g., docker.io/yourusername or private.registry.com)
DOCKER_REGISTRY_USERNAME=your_registry_username
DOCKER_REGISTRY_PASSWORD=your_registry_password_or_access_token

# --- Discord Notifications (Optional) ---
# URL of the Discord webhook to send build status notifications.
# Create a webhook in your Discord server settings (Integrations -> Webhooks).
DISCORD_WEBHOOK_URL=your_discord_webhook_url

# --- CORS Configuration ---
# Comma-separated list of allowed origins for Cross-Origin Resource Sharing.
# Include the URL(s) where your frontend application is served.
# Example for local development:
ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173
# Example for production (replace with your actual frontend domain):
# ALLOWED_ORIGINS=https://cypher.yourdomain.com

# --- Other Settings (Optional) ---
# Example: Set log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# LOG_LEVEL=INFO
